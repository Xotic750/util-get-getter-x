{"version":3,"sources":["../src/util-get-getter-x.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,YAAP,MAAyB,kBAAzB;AACA,OAAO,IAAP,MAAiB,sCAAjB;AACA,OAAO,IAAP,MAAiB,eAAjB;;AAEA,IAAM,QAAQ,GAAG,SAAS,QAAT,GAAoB;AACnC,SAAO,IAAP;AACD,CAFD;AAIA;;;;;;AAIA,IAAM,SAAS,GAAG,SAAS,SAAT,CAAmB,OAAnB,EAA4B;AAC5C,SAAO,OAAO,OAAP,KAAmB,UAAnB,GACH,OAAO,CAAC,OAAD,CADJ,GAEH;AACE,IAAA,KAAK,EAAE,KADT;AAEE,IAAA,KAAK,EAAE;AAFT,GAFJ;AAMD,CAPD,C,CASA;AACA;;AACA;;;;;;AAMA;;;AACA,IAAM,MAAM,GAAG,SAAS,MAAT,CAAgB,UAAhB,EAA4B,OAA5B,EAAqC;AAClD;AACA,MAAM,SAAS,GAAG,OAAO,SAAS,CAAC,CAAD,CAAhB,KAAwB,UAAxB,GAAqC,SAAS,CAAC,CAAD,CAA9C,GAAoD,QAAtE;AACA,MAAM,GAAG,GAAG,OAAO,CAAC,SAAS,SAAT,GAAqB;AACvC,WAAO,IAAI,CAAC,UAAU,CAAC,GAAZ,EAAiB,OAAjB,CAAX;AACD,GAFkB,CAAnB;AAIA,SAAO,GAAG,CAAC,KAAJ,KAAc,KAAd,IAAuB,SAAS,CAAC,GAAG,CAAC,KAAL,CAAhC,GAA8C,UAAU,CAAC,GAAzD,GAA+D,IAAtE;AACD,CARD,C,CAUA;AACA;;AACA;;;;;;;;AAQA;;;AACA,IAAM,SAAS,GAAG,SAAS,SAAT,CAAmB,OAAnB,EAA4B,UAA5B,EAAwC;AACxD,MAAM,QAAQ,GAAG,SAAS,CAAC,OAAD,CAA1B;;AAEA,MAAI,QAAQ,CAAC,KAAT,KAAmB,KAAnB,IAA4B,YAAY,CAAC,QAAQ,CAAC,KAAV,CAA5C,EAA8D;AAC5D,QAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAT,CAAe,WAAf,CAA2B,SAA5B,EAAuC,UAAvC,CAAvB;;AAEA,QAAI,UAAU,IAAI,OAAO,UAAU,CAAC,GAAlB,KAA0B,UAA5C,EAAwD;AACtD;AACA,aAAO,MAAM,CAAC,UAAD,EAAa,QAAQ,CAAC,KAAtB,EAA6B,SAAS,CAAC,CAAD,CAAtC,CAAb;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAbD;;AAeA,eAAe,SAAf","file":"util-get-getter-x.esm.js","sourcesContent":["import attempt from 'attempt-x';\nimport isObjectLike from 'is-object-like-x';\nimport gOPD from 'object-get-own-property-descriptor-x';\nimport call from 'simple-call-x';\n\nconst stubTrue = function stubTrue() {\n  return true;\n};\n\n/**\n * @param {Function|!object} creator - A creator function or a created object.\n * @returns {!object} - An attempt object.\n */\nconst getResult = function getResult(creator) {\n  return typeof creator === 'function'\n    ? attempt(creator)\n    : {\n        threw: false,\n        value: creator,\n      };\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * @param {!object} descriptor - A descriptor object.\n * @param {!object} context - A created object.\n * @param {Function} [validator] - A function to validate the result.\n * @returns {Function|null} - The getter function or null.\n */\n// eslint-enable jsdoc/check-param-names\nconst getter = function getter(descriptor, context) {\n  /* eslint-disable-next-line prefer-rest-params */\n  const validator = typeof arguments[2] === 'function' ? arguments[2] : stubTrue;\n  const res = attempt(function attemptee() {\n    return call(descriptor.get, context);\n  });\n\n  return res.threw === false && validator(res.value) ? descriptor.get : null;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * Get a getter.\n *\n * @param {Function|!object} creator - A creator function or a created object.\n * @param {string} getterName - The getter name.\n * @param {Function} [validator] - A function to validate the result.\n * @returns {Function|null} The target.\n */\n// eslint-enable jsdoc/check-param-names\nconst getGetter = function getGetter(creator, getterName) {\n  const resTest1 = getResult(creator);\n\n  if (resTest1.threw === false && isObjectLike(resTest1.value)) {\n    const descriptor = gOPD(resTest1.value.constructor.prototype, getterName);\n\n    if (descriptor && typeof descriptor.get === 'function') {\n      /* eslint-disable-next-line prefer-rest-params */\n      return getter(descriptor, resTest1.value, arguments[2]);\n    }\n  }\n\n  return null;\n};\n\nexport default getGetter;\n"]}